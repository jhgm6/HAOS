<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.scsj.haos.mapper.CusMapper">
  <resultMap id="BaseResultMap" type="com.scsj.haos.common.domain.Cus">
    <id column="id" jdbcType="VARCHAR" property="id" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="gender" jdbcType="INTEGER" property="gender" />
    <result column="phone" jdbcType="VARCHAR" property="phone" />
    <result column="roomNum" jdbcType="VARCHAR" property="roomnum" />
    <result column="inTime" jdbcType="DATE" property="intime" />
    <result column="outTime" jdbcType="DATE" property="outtime" />
    <result column="deposit" jdbcType="REAL" property="deposit" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, name, gender, phone, roomNum, inTime, outTime, deposit
  </sql>
  <select id="selectByExample" parameterType="com.scsj.haos.common.domain.CusExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from cus
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from cus
    where id = #{id,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from cus
    where id = #{id,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="com.scsj.haos.common.domain.CusExample">
    delete from cus
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.scsj.haos.common.domain.Cus">
    insert into cus (id, name, gender, 
      phone, roomNum, inTime, 
      outTime, deposit)
    values (#{id,jdbcType=VARCHAR}, #{name,jdbcType=VARCHAR}, #{gender,jdbcType=INTEGER}, 
      #{phone,jdbcType=VARCHAR}, #{roomnum,jdbcType=VARCHAR}, #{intime,jdbcType=DATE}, 
      #{outtime,jdbcType=DATE}, #{deposit,jdbcType=REAL})
  </insert>
  <insert id="insertSelective" parameterType="com.scsj.haos.common.domain.Cus">
    insert into cus
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="name != null">
        name,
      </if>
      <if test="gender != null">
        gender,
      </if>
      <if test="phone != null">
        phone,
      </if>
      <if test="roomnum != null">
        roomNum,
      </if>
      <if test="intime != null">
        inTime,
      </if>
      <if test="outtime != null">
        outTime,
      </if>
      <if test="deposit != null">
        deposit,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=VARCHAR},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="gender != null">
        #{gender,jdbcType=INTEGER},
      </if>
      <if test="phone != null">
        #{phone,jdbcType=VARCHAR},
      </if>
      <if test="roomnum != null">
        #{roomnum,jdbcType=VARCHAR},
      </if>
      <if test="intime != null">
        #{intime,jdbcType=DATE},
      </if>
      <if test="outtime != null">
        #{outtime,jdbcType=DATE},
      </if>
      <if test="deposit != null">
        #{deposit,jdbcType=REAL},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.scsj.haos.common.domain.CusExample" resultType="java.lang.Long">
    select count(*) from cus
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update cus
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=VARCHAR},
      </if>
      <if test="record.name != null">
        name = #{record.name,jdbcType=VARCHAR},
      </if>
      <if test="record.gender != null">
        gender = #{record.gender,jdbcType=INTEGER},
      </if>
      <if test="record.phone != null">
        phone = #{record.phone,jdbcType=VARCHAR},
      </if>
      <if test="record.roomnum != null">
        roomNum = #{record.roomnum,jdbcType=VARCHAR},
      </if>
      <if test="record.intime != null">
        inTime = #{record.intime,jdbcType=DATE},
      </if>
      <if test="record.outtime != null">
        outTime = #{record.outtime,jdbcType=DATE},
      </if>
      <if test="record.deposit != null">
        deposit = #{record.deposit,jdbcType=REAL},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update cus
    set id = #{record.id,jdbcType=VARCHAR},
      name = #{record.name,jdbcType=VARCHAR},
      gender = #{record.gender,jdbcType=INTEGER},
      phone = #{record.phone,jdbcType=VARCHAR},
      roomNum = #{record.roomnum,jdbcType=VARCHAR},
      inTime = #{record.intime,jdbcType=DATE},
      outTime = #{record.outtime,jdbcType=DATE},
      deposit = #{record.deposit,jdbcType=REAL}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.scsj.haos.common.domain.Cus">
    update cus
    <set>
      <if test="name != null">
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="gender != null">
        gender = #{gender,jdbcType=INTEGER},
      </if>
      <if test="phone != null">
        phone = #{phone,jdbcType=VARCHAR},
      </if>
      <if test="roomnum != null">
        roomNum = #{roomnum,jdbcType=VARCHAR},
      </if>
      <if test="intime != null">
        inTime = #{intime,jdbcType=DATE},
      </if>
      <if test="outtime != null">
        outTime = #{outtime,jdbcType=DATE},
      </if>
      <if test="deposit != null">
        deposit = #{deposit,jdbcType=REAL},
      </if>
    </set>
    where id = #{id,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.scsj.haos.common.domain.Cus">
    update cus
    set name = #{name,jdbcType=VARCHAR},
      gender = #{gender,jdbcType=INTEGER},
      phone = #{phone,jdbcType=VARCHAR},
      roomNum = #{roomnum,jdbcType=VARCHAR},
      inTime = #{intime,jdbcType=DATE},
      outTime = #{outtime,jdbcType=DATE},
      deposit = #{deposit,jdbcType=REAL}
    where id = #{id,jdbcType=VARCHAR}
  </update>
</mapper>